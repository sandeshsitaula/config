git commit -m "email sent successfully"
git commit -m "more robust logic for adding customers"
nvim frontend/src/components/customerList.jsx
git commit -m "search functionality workable in customerlist"
nvim backend/alert/u
git commit -m "successfully sent message"
sudo apt-get install adb
adb 
sudo adb devices
adb kill-server\
adb start-server\
adb devices\

adb start-server
sudo systemctl status adb
sudo apt --purge remove adb
cat backend/src/roboink/settings.py
cat backend/src/.env
cat backend/src/core/utils/utils.py
cd MapPolygon
cd backend/alertapp
docker stop django
docker stop alert_backend_container
cd Desktop/RoboinkBackend/backend
cat backend/customer/ur
cat backend/customer/urls.py
nvim backend/customer/urls.py
nvim messageCard.jsx
cat customerMessageCard.jsx
nvim src/components/userCard.jsx
git commit -m "email and sms sent successfully"
nvim src/pages/userListing.jsx
git commit -m "sms sent success"
git commit -m "offset added success"
git commit -m "create alert and service areas updated for handling"
git commit -m "more error handling in cards"
nvim components/userCard.jsx
cat backend/customer/models.py
cat backend/alert/models.py
git commit -m "more proper create alert create email message etc"
git commit -m "profile registration and retrival done properly"
nvim authentication/api/ProfileRegister.py
ls authentication/api
git commit -m "added get profile view for getting ucrrne user info"
mv authentication/api/ProfileRegister.py authentication/api/Profile.py
git commit -m "get current profile moved to Profile file"
git commit -m "profile registration success"
nemo . 
cd Desktop/AECPrimeBackend/backend/src
nvim authentication/api/Profile.py
git commit -m "profile update done"
git commit -m "fixed issue related to user without profile"
git pus
git commit -m "alert card done"
cd WaterAlert/backend
cd Desktop/MapPolygon
cat backend
cat backend/alertapp/tasks.py
adb shell am startservice --user 0 -n com.android.shellms/.sendSMS -e contact <number> -e msg 'Subject: Test Subject\n\nTest Message'
adb shell am startservice --user 0 -n com.android.shellms/.sendSMS -e contact 9823632078 -e msg 'Subject: Test Subject\n\nTest Message'
cd Desktop/MapPolygon/backend/alertapp
cat tasks.py
cd Desktop/Books
nvim alert/utils.py
nvim alert/views.py
git idf
git commit -m "email and sms combined with message for customer and alert both"
git commit -m "alert message done success"
nvim alert/models.py
cd 
rm -rf Pipfile
git commit -m "updated create template view to add template_id in response"
cd Desktop/WaterAlert/backend/customer/vi
cd Desktop/WaterAlert/backend/customer/
cat campaigns/Views/TemplateView.py
git commit -m "updated to handle without template id as well\
"
cat mamu/urls.py
nvim event/api/event_crud.py
cd Desktop/MAMU/server/src
 . /home/sandesh/.local/share/virtualenvs/server-S1nOzELj/bin/activate
git commit -m "more proper location"
git commit -m "proper response when creating event"
nvim campaigns/Views/TemplateView.py
ls backend/alert
mkdir cron_scripts
nvim cron_scripts/retry_message
nvim cron_scripts/send_message
cat cron_scripts/send_message
cat Desktop/RoboinkBackend/backend/src/campaigns/Views/TemplateView.py
cat /etc/crontab
ls /etc/cron.d
rm -rf components/messageCard.jsx
git commit -m "django cron but still issue on some parts"
cd frontend/src
cd components
cp customerList.jsx alertList.jsx
git commit -m "working on manage alerts"
cd /etc/cron.d
sudo chmod 0644 send_message
cat send_message
sudo cron status
cat /var/log/
sandesh
sudo nvim send_message
crontab send_message
which zsh
sudo journalctl -xeu cron.service
cron status
/bin/sh
nvim components/ControlPanel.jsx
sudo nvim send_message 
sudo rm /var/log/send_message.log
sudo systemctl restart cron
vim backend/alert/models.py
sudo apt --purge remove cron
sudo apt-get install cron
sudo systemctl star cron
sudo systemctl start cron
nvim src/components/alertList.jsx
cp /etc/cron.d/send_message backend/cron_scripts
cd cr
cd backend/cron_scripts
nvim send_message
git commit -m "issue of crontab solved and issue of our alert view solved"
cat backend/src/campaigns/Views/TemplateView.py
cp frontend/src/components/alertCard.jsx frontend/src/components/manageAlertCard.jsx
nvim frontend/src/components/manageAlertCard.jsx
git commit -m "delete view message in alerts all working\
"
cd rr
git commit -m "manage alert als done"
mkdir ajdeem
cd ajdeem/ && git clone git@github.com:bishal189/adjeem-dubai.git
git@github.com:bishal189/Dubai-templates.git
git clone git@github.com:bishal189/Dubai-templates.git
cat frontend/src/components/alertCard.jsx
cat frontend/src/components/manageAlertCard.jsx
ls frontend/src/components
rm frontend/src/components/manageServiceAreaCard.jsx
nvim frontend/src/components/alertList.jsx frontend/src/components/serviceAreaList.jsx
cp frontend/src/components/alertList.jsx frontend/src/components/serviceAreaList.jsx
git commit -m "working in manage servcie area"
crontab -
cron start
sudo cron stop
sudo cron restart
sudo cron start
sudo systemctl status cron
cat /var/log/retry_failed_emails.log 
sudo su root
cd Desktop/WaterAlert/backend
adb devices
cron stop
cp backend/cron_scripts/send_message /etc/cron.d
crontab /etc/cron.d
nvim backend/cron_scripts/send_message
sudo cp backend/cron_scripts/send_message /etc/cron.d
crontab /etc/cron.d/send_message
nvim frontend/src/components/serviceAreaList.jsx
git commit -m "manage area also done"
rsync -arv --exclude="node_modules" ./backend ssh sandesh@hub.starkville.net
cat backend/cron_scripts/send_message
 ssh sandesh@hub.starkville.net:WaterAlert/\

 ssh sandesh@hub.starkville.net:WaterAlert/
 ssh sandesh@hub.starkville.net:WaterAlert
docker images
git clone git@github.com:propoudel/adjeem_python.git
cat common.py
nvim common/se
nvim common/common.py 
cd env
ls -la 
cat READ.MD
cd common
cd .
nvim common/common.py
cd settings
cat settings.py
cat development.py
nvim wsgi.py
nvim asgi.py
rm READ.MD
nvim configs/settings/settings.py
nvim configs/settings/development.py
nvim configs/settings/production.py
cat makefile
mv makefile Makefile
cat docker/docker-compose.yml
git commit -m "issues related to folder in manage.py asgi and wsgi"
nvim docker/docker-compose.yml
nvim docker
nvim docker/Dockerfile
cat configs/settings/settings.py
cd configs
ld
nvim Dockerfile
git commit -m "little docker issue related to volumes"
nvim configs/asgi.py
git show origin main
	cd docker
docker compose up  --build
cat Dockerfile
cp ../../../RoboinkBackend/backend/src/templates/accounts/emails/reset_password_email.html templates/accounts/
cat templates/accounts/reset_password_email.html
git commit -m "changed email view and changed password view done "
git commit -m "urls updated"
nvim authentication/api/Email.py
git commit -m "using token directly in password reset"
cat core/api/lo
cat core/api/auth/forget_password.py
cat templates/accounts/emails/reset_password_email.html
cat .env.sample
cp .env.sample .env
nvim manage.py
pip install python-dotenv
nvi config/settings/base.py
git commit -m "solved allowed host issue"
python manage.py runserver 
git commit -m "removed cors allowed and allowed host from development.py and added print for debugging"
cat config/wsgi.py
python manage.py startapp seller
cd seller
nvim models.py
git commit -m "model for product"
nvim campaigns/Views/CustomerView.py
git commit -m "added ids in customer creation"
git push -u origin templatesvg
cat backend/src/campaigns/Views/CustomerView.py
git commit -m "changed the field name to another"
pip uninstall Pillow
cat purchaseapp/urls.py
cat receiptapp/m
cat crm/models.py
cat IMS/mo
nvim IMS/views.py
cat masterapp/views.py
cat IMS/views.py
git clone git@github.com:ompandey07/MSSERP.git
git commit -m "added gitignore"
pip install djanog
cat Templates
cp ../IMS/purchaseapp/urls.py purchaseapp
cp ../IMS/purchaseapp/views.py purchaseapp
cp ../IMS/purchaseapp/models.py .
cp ../IMS/purchaseapp/admin.py purchaseapp
cp ../IMS/reportapp/models.py reportapp
cp ../IMS/reportapp/urls.py reportapp
cp ../IMS/reportapp/views.py reportapp
cp ../IMS/reportapp/admin.py reportapp
cp models.py purchaseapp
rm models.py
cp -r ../IMS/salesapp .
cp -r ../IMS/company .
cat company/models.py
cp -r ../IMS/userauth .
cat userauth/models.py
cat purchaseapp/models.py
cat salesapp/models.py
cat receiptapp/models.py
cat purchaseapp/views.py
rm -rf receiptapp
cat salesapp/views.py
cp -r ../IMS/crm/ .
cat crm/views.py
mkdir company_databases
cat reportapp/views.py
cat reportapp/admin.py
cat reportapp/models.py
cat reportapp/urls.py
ls 
cp -r ../IMS/masterapp .
nvim MSSERP/settings.py
nvim company/mi
nvim company/middleware.py
cp ../IMS/IMS/middleware.py MSSERP
rm -rf crm/migrations
rm -rf masterapp/migrations
rm -rf */migrations
python manage.py dbshell\

python manage.py migrate company
python manage.py makemigrations *
python manage.py migrate *
python manage.py migrate masterapp
python manage.py makemigrations purchaseapp
python manage.py makemigrations salesapp
python manage.py makemigrations userauth
python manage.py makemigrations reportapp
python manage.py migrate reportapp
nvim salesapp/admin.py
git commit -m "ongoing work in setup"
cat masterapp/models.py
python manage.py makemigrations company
python manage.py makemigrations masterapp
git commit -m "workable state masterapp sales purchase and report"
nvim salesapp/urls.py
touch masterapp/url.py
nvim masterapp/url.py
mv masterapp/url.py masterapp/urls.py
nvim masterapp/urls.py
nvim reportapp/urls.py
nvim salesapp/models.py
nvim purchaseapp/views.py
nvim Templates/index.html
ls static
ls static/Logo/logo.png
nvim MSSERP/urls.py
grep -r 'godown_setup' .
cat receiptapp/views.py
cat ../adjeem_python/config/urls.py
cat IMS/urls.py
cat IMS/settings.py
cd Downloads/Build-Hotel-Site-With-Python-Django
python3 manage.py runserver
rm -rf Build-Hotel-Site-With-Python-Django
ls sandesh@hub.starkville.net
rm -rf sandesh@hub.starkville.net
git clone git@github.com:Pythondeveloper6/Build-Hotel-Site-With-Python-Django.git
cd ython
cd Build-Hotel-Site-With-Python-Django
pip install bootstrap4
pip insall Pillow
pip install Pillow
grep -r gisproperty
grep -r 'gisproperty' .
nvim project/settings.py
sudo apt-get install gdal-bin libgdal-dev
sudo apt --purge uninstall gdal-bin libgdal-dev
sudo apt --purge remove gdal-bin libgdal-dev
nvim project/mo
nvim property/models.py
mv Build-Hotel-Site-With-Python-Django ../Downloads
git clone https://github.com/samdoghor/lodgify
cd lodgify
npm install
cat README.md
cat App.jsx
cd ..c
rm -rf lodgify
git clone https://github.com/Darshan4114/django-hotel-management-system.git
rm -rf env
cd django-hotel-management-system
python3 -m venv env
cat re
pip cache purge\

pip install -r requirements.txt
nvim re
nvim requirements.txt
pip install django
pip install environ
rm -rf django-hotel-management-system
pip uninstall psycopg2
pip uninstall django
pip freeze
rm -rf ../../adjeem_python
cp -r adjeem_python ..
cat MSSERP/urls.py
ngrok localhost:8000
ngrok http localhost:8000
sudo apt --purge remove ngrok
sudo snap uninstall ngrok
sudo snap remove ngrok
sudo snap install ngrok
ngrok login
ngrok config add-authtoken 2kSJ1LPFHNW5sH1dIgj9ZVm4xiv_2kPwzNJw3a7ALCekKd3ib
ngrok http 8000
cat manage.py
rm -rf configs
cat templates
cat config/urls.py
cat apps/accounts/urls.py
cat apps/accounts/views.py
ls
cd templates/accounts
cat login.html
nvim login.html
pip install social-auth-app-django\

pip install social-auth-core
python manage.py show_urls
pip instal
pip install django-allauth
nvim config/urls.py
nvim config/settings/development.py
python manage.py collectstatic
pip install google-auth
curl localhost:8000
cd Desktop/wa
docker compose up django database
git commit -m "changed to input from text in dashboard'\
"
nvim frontend/src/components/userCard.jsx
nvim frontend/src/pages/userListing.jsx
git commit -m "zoom level and center updated"
nvim backend/alert/utils.py
nvim backend/customer/utils.py
git commit -m "twilio also implemented"
git commit -m "fixed issues in cron and added alert for  tracking in notification model"
rsync -arv --exclude="node_modules" ./backend ssh sandesh@hub.starkville.net:WaterAlert/
rsync -arv --exclude="node_modules" .env ssh sandesh@hub.starkville.net:WaterAlert/
rsync -arv --exclude="node_modules" .env  sandesh@hub.starkville.net:WaterAlert/
git commit -m "few issues in get alerlist"
rm -rf /var/log/delete_completed_message.log
sudo rm -rf /var/log/delete_completed_message.log
ls adjeem_python
cat config/settings/base.py
rm -rf configs.old
pip install google-auth google-auth-oauthlib google-auth-httplib2\
\

nvim config/settings/base.py
nvim apps/accounts/urls.py
git commit -m "sso ongoing loging in but only for short time"
nvim templates/accounts/tApassword
nvim templates/includes/sso.html
python manage.py migrate account
rm -rf db.sqlite3
rm -rf apps/accounts/migrations
python manage.py makemigrations apps/accounts
python manage.py makemigrations accounts
python manage.py accounts
python manage.py migrate accounts
python manage.py migrage
cat templates/accounts/login.html
0\

nvim templates/accounts/login.html
git commit -m "sso fully functional"
nvim apps/accounts/ssoview.py
git commit -m "little clean up"
nvim frontend/src/components/alertCard.jsx
git commit -m "notification task creation intially when alert is created"
git commit -m "more failsafe for our send sms"
crontab -l
cat /var/log/send_message.log
cd frontend
git commit -m "removed previous update of having alert in ontification model"
git commit -m "fixed issue in cron which alowed failed message to be completed before actual completion"
git commit -m "ongoing in alertlist"
nvim Templates/Entry
nvim Templates/Setups/salesconfog.html
git commit -m "fixed cross icon  in voucher"
cp db.sqlite3 ..
git commit -m "removed db.sqlite3"
git commit -m "daybook functional again"
nvim reportapp/views.py
git commit -m "added company in all report pages"
git commit -m "dealer shown"
python manage.py runserve
cat /var/log/delete_completed_message.log
nvim frontend/src/components/alert
nvim backend/alert/models.py
git commit -m "alert list changed twilio updated"
git commit -m "resove sends both form of messages"
nvim frontend/src/components/createAlertCard.jsx
git commit -m "added from in email"
cd Desktop/RoboinkBackend/backend/src
cat core/utils/utils.py
docker exec -it alert_backend_container /bin/bash
ls apps
pip install pillow
python manage.py makemigrations category
python manage.py makemigrations store
git commit -m "header corrected"
cat apps/category/models.py
cat apps/store/models.py
cd static
cd ads
cd assets
cd img
cd category
nvim apps/category/models.py
git commit -m "category shown view for homw with context written"
git commit -m "media added to gitignore"
git commit -m "latest products for each category shown"
nvim templates/includes/header.html
git commit -m "added model for handling multiple images and subcategory"
cp frontend/src/components/manageAlertCard.jsx frontend/src/components/manageServiceAreaCard.jsx
nvim frontend/src/components/manageServiceAreaCard.jsx
git commit -m "ongoing work to convert service area to alert"
git commit -m "service area to alert conversion finished"
nvim frontend/src/components/alertList.jsx
git commit -m "alert setter also added"
cd Desktop/WaterAlert/
nvim frontend/src/components/ControlPanel.jsx
nvim backend/wateralertproject/settings.py
git commit -m "removed name and updated timezone value"
cp ../IMS/.gitignore .
nvim salesapp/views.py
git commit -m "merging "
cp ../db.sqlite3 .
nvim company/forms.py
pwd
mkdir seller/api
git commit -m "serializers for all product operations"
git commit -m "ongoing work in serializers and view"
git commit -m "updated models a bit"
nvim seller/serializers.py
pipenv install django-filter
http POST http://your-django-api-url/api/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans:='[\
        {"product_plan": {"plan_type": "Standard", "terms": "1 year", "access_mode": "Full"},\
         "product_pricing": {"plan_name": "Standard Plan", "plan_price": 99.99, "comparison_price": 129.99, "plan_features": {"Feature 1": "Detail 1", "Feature 2": "Detail 2"}}},\
        {"product_plan": {"plan_type": "Premium", "terms": "2 years", "access_mode": "Extended"},\
         "product_pricing": {"plan_name": "Premium Plan", "plan_price": 199.99, "comparison_price": 249.99, "plan_features": {"Feature A": "Detail A", "Feature B": "Detail B"}}}\
    ]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://your-django-api-url/api/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans:='[\
        {"product_plan": {"plan_type": "Standard", "terms": "1 year", "access_mode": "Full"},\
         "product_pricing": {"plan_name": "Standard Plan", "plan_price": 99.99, "comparison_price": 129.99, "plan_features": {"Feature 1": "Detail 1", "Feature 2": "Detail 2"}}},\
        {"product_plan": {"plan_type": "Premium", "terms": "2 years", "access_mode": "Extended"},\
         "product_pricing": {"plan_name": "Premium Plan", "plan_price": 199.99, "comparison_price": 249.99, "plan_features": {"Feature A": "Detail A", "Feature B": "Detail B"}}}\
    ]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

curl -X POST http://your-django-api-url/api/products/ \\
    -H "Content-Type: multipart/form-data" \\
    -F "product_name=Sample Product" \\
    -F "listing_type=Type A" \\
    -F "short_description=A brief description of the product." \\
    -F "ideal_users=Users who need this product" \\
    -F "category=1" \\
    -F "sub_category=1" \\
    -F "integrated_tools=[\"Tool A\", \"Tool B\"]" \\
    -F "integrated_features=[\"Feature A\", \"Feature B\"]" \\
    -F "long_description=A detailed description of the product." \\
    -F "youtube_video=https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    -F "status=PENDING" \\
    -F "created_by=1" \\
    -F "product_feature.feature_image=@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg" \\
    -F "product_feature.feature_detail=Important feature details" \\
    -F "pricing_plans=[{\"product_plan\": {\"plan_type\": \"Standard\", \"terms\": \"1 year\", \"access_mode\": \"Full\"}, \"product_pricing\": {\"plan_name\": \"Standard Plan\", \"plan_price\": 99.99, \"comparison_price\": 129.99, \"plan_features\": {\"Feature 1\": \"Detail 1\", \"Feature 2\": \"Detail 2\"}}}, {\"product_plan\": {\"plan_type\": \"Premium\", \"terms\": \"2 years\", \"access_mode\": \"Extended\"}, \"product_pricing\": {\"plan_name\": \"Premium Plan\", \"plan_price\": 199.99, \"comparison_price\": 249.99, \"plan_features\": {\"Feature A\": \"Detail A\", \"Feature B\": \"Detail B\"}}}]" \\
    -F "product_images=@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg"\

curl -X POST http://localhost:8000/api/seller/products/ \\
    -H "Content-Type: multipart/form-data" \\
    -F "product_name=Sample Product" \\
    -F "listing_type=Type A" \\
    -F "short_description=A brief description of the product." \\
    -F "ideal_users=Users who need this product" \\
    -F "category=1" \\
    -F "sub_category=1" \\
    -F "integrated_tools=[\"Tool A\", \"Tool B\"]" \\
    -F "integrated_features=[\"Feature A\", \"Feature B\"]" \\
    -F "long_description=A detailed description of the product." \\
    -F "youtube_video=https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    -F "status=PENDING" \\
    -F "created_by=1" \\
    -F "product_feature.feature_image=@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg" \\
    -F "product_feature.feature_detail=Important feature details" \\
    -F "pricing_plans=[{\"product_plan\": {\"plan_type\": \"Standard\", \"terms\": \"1 year\", \"access_mode\": \"Full\"}, \"product_pricing\": {\"plan_name\": \"Standard Plan\", \"plan_price\": 99.99, \"comparison_price\": 129.99, \"plan_features\": {\"Feature 1\": \"Detail 1\", \"Feature 2\": \"Detail 2\"}}}, {\"product_plan\": {\"plan_type\": \"Premium\", \"terms\": \"2 years\", \"access_mode\": \"Extended\"}, \"product_pricing\": {\"plan_name\": \"Premium Plan\", \"plan_price\": 199.99, \"comparison_price\": 249.99, \"plan_features\": {\"Feature A\": \"Detail A\", \"Feature B\": \"Detail B\"}}}]" \\
    -F "product_images=@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg"\

http
http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans:='[\
        {"product_plan": {"plan_type": "Standard", "terms": "1 year", "access_mode": "Full"},\
         "product_pricing": {"plan_name": "Standard Plan", "plan_price": 99.99, "comparison_price": 129.99, "plan_features": {"Feature 1": "Detail 1", "Feature 2": "Detail 2"}}},\
        {"product_plan": {"plan_type": "Premium", "terms": "2 years", "access_mode": "Extended"},\
         "product_pricing": {"plan_name": "Premium Plan", "plan_price": 199.99, "comparison_price": 249.99, "plan_features": {"Feature A": "Detail A", "Feature B": "Detail B"}}}\
    ]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans:='[\
        {"product_plan": {"plan_type": "Standard", "terms": "1 year", "access_mode": "Full"},\
         "product_pricing": {"plan_name": "Standard Plan", "plan_price": 99.99, "comparison_price": 129.99, "plan_features": {"Feature 1": "Detail 1", "Feature 2": "Detail 2"}}},\
        {"product_plan": {"plan_type": "Premium", "terms": "2 years", "access_mode": "Extended"},\
         "product_pricing": {"plan_name": "Premium Plan", "plan_price": 199.99, "comparison_price": 249.99, "plan_features": {"Feature A": "Detail A", "Feature B": "Detail B"}}}\
    ]' \\
    
http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans:='[\
        {"product_plan": {"plan_type": "Standard", "terms": "1 year", "access_mode": "Full"},\
         "product_pricing": {"plan_name": "Standard Plan", "plan_price": 99.99, "comparison_price": 129.99, "plan_features": {"Feature 1": "Detail 1", "Feature 2": "Detail 2"}}},\
        {"product_plan": {"plan_type": "Premium", "terms": "2 years", "access_mode": "Extended"},\
         "product_pricing": {"plan_name": "Premium Plan", "plan_price": 199.99, "comparison_price": 249.99, "plan_features": {"Feature A": "Detail A", "Feature B": "Detail B"}}}\
    ]' \\
    
http POST http://localhost:8000/api/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans='[{"product_plan": {"plan_type": "Type A", "terms": "12 months", "access_mode": "Online"}, "product_pricing": {"plan_name": "Basic Plan", "plan_price": 19.99, "comparison_price": 29.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}, {"product_plan": {"plan_type": "Type B", "terms": "24 months", "access_mode": "Offline"}, "product_pricing": {"plan_name": "Premium Plan", "plan_price": 39.99, "comparison_price": 49.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans='[{"product_plan": {"plan_type": "Type A", "terms": "12 months", "access_mode": "Online"}, "product_pricing": {"plan_name": "Basic Plan", "plan_price": 19.99, "comparison_price": 29.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}, {"product_plan": {"plan_type": "Type B", "terms": "24 months", "access_mode": "Offline"}, "product_pricing": {"plan_name": "Premium Plan", "plan_price": 39.99, "comparison_price": 49.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans:='[{"product_plan": {"plan_type": "Type A", "terms": "12 months", "access_mode": "Online"}, "product_pricing": {"plan_name": "Basic Plan", "plan_price": 19.99, "comparison_price": 29.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}, {"product_plan": {"plan_type": "Type B", "terms": "24 months", "access_mode": "Offline"}, "product_pricing": {"plan_name": "Premium Plan", "plan_price": 39.99, "comparison_price": 49.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans@='[{"product_plan": {"plan_type": "Type A", "terms": "12 months", "access_mode": "Online"}, "product_pricing": {"plan_name": "Basic Plan", "plan_price": 19.99, "comparison_price": 29.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}, {"product_plan": {"plan_type": "Type B", "terms": "24 months", "access_mode": "Offline"}, "product_pricing": {"plan_name": "Premium Plan", "plan_price": 39.99, "comparison_price": 49.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
    pricing_plans='[{"product_plan": {"plan_type": "Type A", "terms": "12 months", "access_mode": "Online"}, "product_pricing": {"plan_name": "Basic Plan", "plan_price": 19.99, "comparison_price": 29.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}, {"product_plan": {"plan_type": "Type B", "terms": "24 months", "access_mode": "Offline"}, "product_pricing": {"plan_name": "Premium Plan", "plan_price": 39.99, "comparison_price": 49.99, "plan_features": {"feature1": "Description of feature 1", "feature2": "Description of feature 2"}}}]' \\
    product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
 product_images@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
 product_images@=/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
 
http --form POST http://localhost:8000/api/seller/products/ \\
    product_name="Sample Product" \\
    listing_type="Type A" \\
    short_description="A brief description of the product." \\
    ideal_users="Users who need this product" \\
    category=1 \\
    sub_category=1 \\
    integrated_tools='["Tool A", "Tool B"]' \\
    integrated_features='["Feature A", "Feature B"]' \\
    long_description="A detailed description of the product." \\
    youtube_video="https://www.youtube.com/watch?v=dQw4w9WgXcQ" \\
    status="PENDING" \\
    created_by=1 \\
    product_feature.feature_image@/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg \\
    product_feature.feature_detail="Important feature details" \\
 product_images=/home/sandesh/Downloads/pexels-alex-andrews-271121-1983046.jpg\

git reset --hard HEAD
cd Desktop/IMS
git commit -m "serializers updated but looks liek not workable will have to do it manual way"
zip -r media.zip media
git commit -m "update to google maps api done"
nvim backend/requirements.txt
docker compose up django database  --build
cd frontend/
ssh sandesh@hub.starkville.net
docker stop alert_postgres_container
docker compose up django database  
cd Desktop/WaterAlert/frontend
nvim backend/customer/views.py
nvim backend/alert/cron.py
nvim frontend/src/a
rsync -arv --exclude="node_modules" ./frontend sandesh@hub.starkville.net:WaterAlert/
nvim frontend/src/axiosInstance.jsx
rsync -arv --exclude="node_modules" ./backend sandesh@hub.starkville.net:WaterAlert/
nvim backend/alert/views.py
git commit -m "removed country"
git clone git@github.com:fractalnetworksco/FractalApp.git
mv .env.example
cat src/core/api/auth/login.py
nvim src/core/api/auth/login.py
cd backend/s
git commit -m "changed login from username to password"
pipenv run python manage.py createsuperuser
cat src/App.css
cat src/index.css
nvim src/components/Header.tsx
git commit -m "header done"
git commit -m "hero section 1 fnished"
cd alphors\(1\)
npm run dev 
sudo powerof
cd src/assets
python manage.py makemigrations 
git merge origin main
rm -rf media.zip
sls
nano .gitignore
cd media
cd photos
cd products
cd templates/
cd home
firefox index*
git commit -m "changed url of category to /category and product will start with ad to prevent future name collision"
git commit -m "product images shown properly in ad product"
nvim apps/home/urls.py
git commit -m "ongoing work in service page"
nvim src/App.tsx
nvim index.html
nvim src/index.css
git commit -m "font faimly changed and that unused section removed"
git remote show origin
git commit -m "lets talk section done"
nvim components/landing/HeroSection1.tsx
color-picker
cd Dow
mkdir alphors
git clone git@github.com:Zura1z/alphors.git
cp -r ../Downloads/alphors\(1\)/src .
npm install 
git commit -m "changes made in following sections"
git commit -m "ongoing in project lifecycle"
nvim components/landing/LetsTalk.tsx
git commit -m "project lifecyclt part done"
sqlite3 db.sqlite3
git commit -m "commit"
git commit -m "removing db.sqlite3 in folder"
nvim .gitignore
cd Downloads/alphors\(1\)
cd al
rm -rf .git
git init
git commit -m "present for alphors update"
git remote add origin git@github.com:Zura1z/alphors.git
git merge --allow-unrelated-history origin/main
cp -r src ..
rm -rf src
mv yarn.lock ..
git merge origin/main --allow-unrelated-histories
git commit -m "mergint"
git commit -m "testimonials updated"
nvim components/landing/Testimonials.tsx
grep -r 'Start journey' .
grep -r 'Start' .
nvim components/ProjectPage/Section
nvim components/ProjectPage/SectionEight.tsx
nvim App.j
git commit -m "grandient color changed"
cat tsconfig.
cat tsconfig.json
cp ../Downloads/alphors\(1\)/alphors/tailwind.config.js .
cat tailwind.config.js
nvim tailwind.config.js
git commit -m "inter font added and overall ununsed imports removed"
nvim components/Footer.tsx
git commit -m "footer done"
nvim components/landing/Partners.tsx
cat vite.config.ts
git commit -m "ongoing work in portfolio"
nvim src/components/landing/HeroSection1.tsx
git commit -m "removed unneeded components fro deployment"
nvim src/components/landing/Partners.tsx
nvim src/components/landing/Portfolio.tsx
git commit -m "fixing for deployment try 2"
yarn test
yarn buid
git commit -m "portfolio styling changed"
nvim components/landing/Pro
nvi 
nvim apps/home/views.py
git diff HEAD
git diff HEAD~
git commit -m "index page updated"
cat src/App.
cat src/App.tsx
git commit -m "project lifecycle updated now buttons donot move"
nvim components/landing/Portfolio.tsx
git commit -m 'small issue in portfolio page done"\
'
cat home.tsx
cat App.tsx
cp ../App.tsx landing.tsx
nvim landing.tsx
cat imprint.tsx
cat main.tsx
cat components/Layout.tsx
ls ../components
tree
cp ../projects/\[projectId\].tsx ProjectPage.tsx
mv ProjectPage.tsx project.tsx
nvim project.tsx
nvim App.tsx
git commit -m "product page made in pages responsible for showing products"
nvim components/landing/ProjectLifecycle.tsx
git commit -m "fixing issue for deployment"
cd pages
yarn build
npm install react-router-dom
npm run dev
cd alphors
rm yarn.lock
git commit -m "removed yarn.lock file"
git push -u origin main
nvim core/api/profile.py
nvim core/models.py
cd campaigns
nvim core/api/auth/register.py
mv core/api/profile.py core/api/change_details.py
nvim core/api/change_details.py
nvim core/api/support.py
git checkout -b settings
git commit -m "register endpoint added and firstname and last name added for profile model"
git commit -m "only company_name left now"
git commit -m "company name also updated successfully"
git commit -m "complain model made and view for complain registration also done"
http post localhost:8000/api/core/register/ \\
email=justpie8@gmail.com \\
username=justpie8 \\
first_name=ramesh \\
last_name=sedai \\
bio="This is a bio for justpie"
http post localhost:8000/api/core/register/ \\
email=justpie8@gmail.com \\
username=justpie8 \\
first_name=ramesh \\
last_name=sedai \\
bio="This is a bio for justpie" \\
password=sandesh
http post localhost:8000/api/core/login/ \\
email=justpie8@gmail.com \\
password=sandesh
 . /home/sandesh/.local/share/virtualenvs/backend-3k7WmmqO/bin/activate
mv *.png figmaaec
cd RoboinkBackend
nvim templates/complaint.html
mv templates/complaint.html templates/complain.html
git commit -m "complain logic also done"
cd figmaaec
nvim templates/complain.html
git commit -m "image attached for both user"
nvim core/utils/utils.py
git commit -m "image attachment for both users"
git push -u origin settings
mv IMS ../Downloads
mv db.sqlite3 ..
cat .gitignore
git commit -m "merging"
mv ../db.sqlite3 .
source env/bin/activate]
cd Downloads/IMS
cat Templates/Entry/salesinvoice.html
cat apps/home/urls.py
git checkout -b alt
git commit -m "fixed issues related to id name in unit and alt units"
cd AECPrime
git commit -m "models for altunit support added"
git commit -m "ratio value also calcualted nicely"
git commit -m "alt unit value increase properly"
git commit -m "godown feature in ocmpany model added"
git commit -m "godown enable disable done"
cd mm
git commit -m 'Onclick for our table row done "\
'
git commit -m "godwon added in second column"
nvim Templates/Entry/salesinvoice.html
cd Desktop/MSSERP/
nvim masterapp/models.py
nvim MSSERP/vi
cd Desktop/mx
git commit -m "alt unit made completely optional"
nvim templates/home/index
git commit -m "ongoing work removed uneeded parts "
nvim templates/home/index.html
git commit -m "detail page half done"
git fetch origin master
git merge origin/master
git commit -m "ongoing work in detail"
git commit -m "only listing feature left now"
s
git commit -m "phone number shown and unshown done "
touch templates/includes/send_message_modal.html
git commit -m "send message modal done"
cd Desktop/ajdeem
rm -rf ajdeem
cd adjeem_python
git commit -m "little issue in modal"
git commit -m "moved completely to postgres"
git commit -m "moved jsonfield to array field and added category and subcategory serializers"
nvim seller/models.py
git commit -m "ongoing work in product apiview listing all product details"
git commit -m "all required fields added in add product successfull"
git commit -m 'finished view for create product and added to url as well"\
'
git commit -m "fixed incorrect migration issue"
cat seller/models.py
pipenv install psycopg2-binary
cat aecprime/settings.py
git commit -m "small issue with restframework with tokens"
nvim seller/views.py
git commit -m "moved back to our previous json field since arrayfield gave errors"
git commit -m "updated seller admin"
git commit -m "now listgenerics view only added for list create has its custom method"
rm seller/migrations
rm -r seller/migrations
pipenv shell 
python manage.py makemigrations seller
git commit -m "product images also shown success in retrive view"
git commit -m "retrived every type of data in retrive api view"
http localhost:8000/api/seller/products/\?category=demo
http localhost:8000/api/seller/products/\?category_name=demo
http localhost:8000/api/seller/products/\?category__name=demo
http localhost:8000/api/seller/products/\?category__name=Category
http localhost:8000/api/seller/products/\?category__name="Category Name"
http localhost:8000/api/seller/products/\?category__name="Category mame"
http localhost:8000/api/seller/products/\?category__name="Category name"
http localhost:8000/api/seller/products/\?product_name=demo
http http://localhost:8000/api/seller/products/?page=2&product_name=demo"
http http://localhost:8000/api/seller/products/?page=2
http http://localhost:8000/api/seller/products/\?page=2
http http://localhost:8000/api/seller/products/
http http://localhost:8000/api/seller/products/23/
http http://localhost:8000/api/seller/products/12/
http http://localhost:8000/api/seller/products/1
http http://localhost:8000/api/seller/products/1/
http http://localhost:8000/api/seller/products/5/
cd Desktop/RoboinkBackend
cat backend/src/campaigns/serializers.py
cd backend/src
git commit -m "added seializers in account for seller to see"
cp templates/includes/send_message_modal.html templates/includes/alert_modal.html
nvim templates/includes/alert_modal.html
git commit -m report modal also done in detail page"\
'
git commit -m "report modal also done in detail page"
git commit -m "service details done"
git commit -m "view count also done"
git switch master
nvim apps/store/models.py
python manage.py migrte
cd Des
bg
git commit -m "godown setup done"
git commit -m "godown created in item setup"
git commit -m godown shown in  godown list"\
'
git commit -m 'godown shown in godown list in sales invoice'
git commit -m "godown also shown no product shown"
git commit -m "fixed issue related to classname"
git commit -m "finally data going twice"
git rm -f detail
git branch -D detail
git log
git checkout -b detail
git commit -m "favourtes donw"
cd Desktop/
cd FractalApp
git pull origin master
ls -la
git fetch origin main
git merge origin/main
mv .env.example .env
make up 
docker ps -a
curl localhost:3002
curl localhost:3000
cd eventproject
cd event
cat models.py
cat views.py
cat fixtures
cat eventproject/urls.py
docker ps
docker exec -it fractalapp-react-1
cd WaterAlert
cat frontend/src/axiosInstance.jsx
cd Desktop/WaterAlert
cat backend/wateralertproject/settings.py
cat frontend/src/pages/userListing.jsx
cat frontend/src/utils.js
sudo apt-get install google-chrome-stable
sudo snap install chrome
sudo snap install google-chrome-stable
git clone https://github.com/fractalnetworksco/selfhosted-gateway.git
cd selfhosted-gateway
make docker
make setup
make gateway
cat djangoproject/eventproject/settings.py
nvim 
curl localhost:8000/token
curl localhost:8000/api/token
docker exec -it fractalapp-react-1 /bin/bash
cd djangoproject/event
cd djangoproject/eventapp
mkdir management
cd management
touch __init.py__
mv __init.py__ __init__.py
mkdir commands
touch __init__.py
cd commands
pip install beautifulsoap
pip install beautifulsoap4
pip install beautifulsoup4
pip install requests
nvim fetch_events_test.py
python3 fetch_events_test.py
nvim fetch.py
python3 fetch.py
make up
l
cat .env
cat app2.test.starkville.net
cat Makefile
cat env 
nvim .env
cd djangoproject
cd eventapp
nvim docker-compose.yml
cat djangoproject/Dockerfile
cat docker-compose.yml
nvim djangoproject/eventproject/settings.py
docker compose up 
nvim react-app/src/apiClient.js
cd react-app
cat apiClient.js
cd
cd Desktop/FractalApp
docker compose up
curl https://starkville.org/events/2024-04/
nemo .
git push -u origin alt
git switch main
cat backend/src/authentication/models.py
cd Desktop
gthumb 2024-08-12_14-14.png
nvim apps/store/views.py
touch templates/home/feedback.html
nvim templates/home/service-details.html
git commit -m "feedback page ongoing "
cdsr
pipenv run python manage.py migrate
git commit -m "seller permissions working properly"
git commit -m "making sure that seller cannot view another seller products"
pipenv run python manage.py runserver
http localhost:8000/api/seller/products/1/
http localhost:8000/api/seller/products/4/
http localhost:8000/api/seller/products/5/
http localhost:8000/api/seller/products/7/
git commit -m "udpated little in serializer vital for list products for seller to work"
http delete localhost:8000/api/seller/products/7/
http patch localhost:8000/api/seller/products/6/ \\
product_name=sandesh
http patch localhost:8000/api/seller/products/6/ \\
product_name=sandeshupdated \\
integrated_tools=hellothere
http patch localhost:8000/api/seller/products/6/ \\
product_name=sandeshupdated \\
integrated_tools=hellothere \\
integrated_tools=again 
http localhost:8000/api/buyer/products/6/
http post localhost:8000/api/auth/login/ \\
email=sandeshsitoula6@gmail.com \\
password=sandesh
http post localhost:8000/api/auth/email_login/ \\
email=sandeshsitoula6@gmail.com \\
password=sandesh
http post localhost:8000/api/auth/email_login/ \\
email=sandeshsitoula@gmail.com \\
password=sandeshupdated
http post localhost:8000/api/auth/email_login/ \\
email=sandesh@gmail.com \\
password=sandeshupdated
http post localhost:8000/api/auth/email_login/ \\
email=sandesh@gmail.com \\
password=sandesh
http post localhost:8000/api/auth/email_login/ \\
email=san@gmail.com \\
password=sandesh
http post localhost:8000/api/auth/email_login/ \\
email=sandeshsitoula@gmail.com \\
password=sandesh
http post localhost:8000/api/auth/email_login/ \\
email=sandeshsitoula@gmail.com \\
password=sandes
http post localhost:8000/api/auth/email_login/ \\
email=sandeshsitoula@gmail.com \\
password=san
http localhost:8000/api/seller/products/6/
export token=35aafd3c50487d5f1f66b79b4a13457a9089c625
http post localhost:8000/api/auth/email_login/ \\
email=sandeshsitoula@gmail.com \\
password=sandesh12890
http localhost:8000/api/auth/buyer/me/ \\
"Authorization: Token $token\
"
http localhost:8000/api/auth/seller/me/ \\
"Authorization: Token $token\
"
http localhost:8000/api/buyer/products/
http localhost:8000/api/seller/products/
http localhost:8000/api/seller/products/6/ \\
"Authorization: Token $token\
"
http localhost:8000/api/seller/products/4/ \\
"Authorization: Token $token\
"
http delete localhost:8000/api/seller/products/ \\
"Authorization: Token $token\
"
http delete localhost:8000/api/seller/products/6/ \\
"Authorization: Token $token\
"
cp authentication/api/Profile.py authentication/api/SellerProfile.py
mv authentication/api/Profile.py authentication/api/BuyerProfile.py
git commit -m "separate models for buyers and seller with separate endpoints"
lf
pipenv run python manage.py startapp buyer
cp -r seller/api buyer
nvim aecprime/settings.py
cp seller/urls.py buyer
nvim buyer/urls.py
git commit -m "separated endoints for seller and buyer operations"
git commit -m "separating logics for seller and buyer and implementing permissions for seller operations"
git commit -m 'used abstract base class for handling common data in both seller and buyer user profile"\
;\
'
 . /home/sandesh/.local/share/virtualenvs/sandesh-HxqNFXml/bin/activate
rm Pipfile
deactivate
git commit -m "update product detail done"
cd Downloads/Postman
rm -rf seller/migrations
pipenv run python manage.py makemigrations
pipenv run python manage.py makemigrations seller
pipenv run python manage.py makemigrations authentication
python manage.py migrate authentication
python manage.py migrate seller
python manage.py flush
git commit -m "issue during migration and little spelling issue in seller urls"
http localhost:8000/api/seller/products/ \\
"Authorization: Token $token\
"
pip install black
pip install isort
docker exec -it postgres-container /bin/bash
rm -rf authentication/migrations
python manage.py makemigrations authentication
git commit -m "meta word was not captitalized which made abstract as false"
cd Downloads
cd Postman
./Postman
docker start postgres-container
cd Desktop/AECPrimeBackend/backend/
nvim authentication/urls.py
git diff
git commit -m "since account links to userprofile now so made changes based on that"
black authentication/models.py
nvim authentication/models.py
black authentication/api/*
nvim authentication/api/ResetPassword.py
nvim seller/api/*
black seller/api/Product.py
isort seller/api/Product.py
isort -i seller/api/Product.py
nvim seller/api/Product.py
isort buyer/api/Product.py
isort authentication/api/*
nvim authentication/api/SellerProfile.py
git commit -m "formatting using black and isrot"
cd Desktop/MSSERP
nvim masterapp/views.py
git commit -m "issue in salesinvoice fixed"
cd MSSERP
nvim masterapp/admin.py
python manage.p ymigrate
rm db.sqlite3
python manage.py createsuperuser
cd Desktop/AECPrime
c d..
cd AECPrimeBackend
cat backend/src/seller/urls.py
cat backend/src/buyer/urls.py
cat backend/src/aecprime/urls.py
git pull origin main
git branch
python manage.py makemigrations
python manage.py migrate
cd Desktop/adjeem_python
source env/bin/activate
nvim templates/home/feedback.html
git commit -m "created review model"
git commit -m "feedback page done properly"
fg
git add .
git commit -m "review finished properly"
git push -u origin master
git push -u origin detail
git status
sudo poweroff
cd Desktop/AECPrimeBackend
ls
cd backend
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
python manage.py runserver
cat src/buyer/api/Product.py
cd ..
docker start postgres-container
cd Desktop/adjeem_python
ls
nvim apps/home/views.py
git commit -m "latest visitor review done in dashboard page"
git add .
git commit -m "review section done"
git push -u origin detail
fg
git diff
sudo poweroff
cd Desktop/adjeem_python
ls
source env/bin/activate
python manage.py runserver
cd Desktop/adjeem_python
ls templates
tree templates
git status
git add .
git commit -m "paginator decreased for testing"
git push -u origin detail
git switch main
git switch master
git pull origin main
git pull origin master
ls templates/partials/pagination.html
cat templates/partials/*
ls
nvim apps/category/views.py
git diff
cd Desktop/MSSERP
git status
git fetch origin main
nvim masterapp/admin.py
git add .
git commit -m "merging"
git merge origin/main
git push -u origin main
cd ..
cd adjeem_python
ls
source env/bin/activate
python manage.py makemigrations
python manage.py migrate
python manage.py runserver
sudo poweroff
cd Desktop/adjeem_python
ls
source env/bin/activate
python manage.py runserver
cd Desktop/adjeem_python
ls
nvim apps/store/views.py
git diff
git add .
git commit -m "added script for pagination"
sudo poweroff
cd Desktop/adjeem_python
source env/bin/activate
python manage.py runserver
cd Desktop/adjeem_python
nvim apps/category/views.py 
git status
git commit -m "pagination working properly for category"
git push -u origin master
git fetch origin master
git merge origin/master
nvim apps/home/urls.py
git commit -m "filtering also done"
g
git diff
git add .
git commit -m "sort products fixed"
black apps/*/*
isort apps/*/*
fg
ls
nvim apps/home/views.py
sudo poweroff
cd Desktop/MSSERP/
ls
git status
git fetch origin main
git merge origin/main
git brach
git branch
sudo poweroff
cd Desktop/AECPrime
ls
npm install --save-dev @types/node\

npm run dev
cd Desktop/AECPrimeBackend
cd backend
cd src
nvim seller/models.py
git commit -m "made few fields as nullable"
git push -u origin master
nvim aecprime/settings.py
c d..
cd ..
cd AECPrime
git commit -m 'sso for google and facebook frontend done"\
'
npm build
nvim tsconfig.json
nvim tsconfig.node.json
nvim tsconfig.app.json
git diff
git reset --hard HEAD
npm run build
nvim src/components/common/googleLogin.tsx
git commit -m "google issue realted to typescript fixed"
fg
git add .
git commit -m "facebook and google working perfectly with fixed typescript"
ls
nvim .gitignore
nvim .env
cd Desktop/AECPrime
s
nvim components/registration/EmailRegister.tsx
mkdir components/common
touch components/common/googleLogin.tsx
cd ..
nvim index.html
cd src
fg
nvim components/common/facebookLogin.tsx
ls
nvim global.d.ts
nvim components/common/googleLogin.tsx
git diff
npm run build
nvim components/registration/Register.tsx
cat adjeem_python/templates/accounts/login.html
nvim adjeem_python/templates/accounts/login.html
cd Desktop/adjeem_python
cd templates
cd includes
ls
cat s
cat sso.html
cd Desktop/adjeem_python
source env/bin/activate
python manage.py runserver
cd Desktop/adjeem_python
source env/bin/activate
git diff 
git branch
git pull origin master
git fetch origin master
git commit -m "merge issue\
"
nvim templates/listing/listing-sidebar.html
git commit -m "merging"
git merge origin/master
nvim apps/home/urls.py
nvim apps/home/views.py
git commit -m "conflict resolving"
git switch detail
git status
git diff
git switch master
nvim apps/category/urls.py
python manage.py runserver
python manage.py makemigrations
python manage.py migrate
git commit -m "conflict solved"
git commit -m "filtering name prce range done"
nvim apps/category/views.py
cp templates/partials/product_paginations.html templates/partials/filter_paginations.html
fg
nvim templates/partials/product_paginations.html
rm templates/partials/product_paginations.html
ls
cp templates/partials/pagination.html templates/partials/filter_paginations.html
nvim templates/partials/filter_paginations.html
git add .
git commit -m "pagination also done properly in filtering"
git push -u origin master
sudo poweroff
cd Desktop/AECPrimeBackend
cd backend
cd src
ls
touch authentication/api/sso.py
fg
nvim authentication/api/sso.py
pipenv install pip install google-auth google-auth-oauthlib djangorestframework requests\

pipenv install pip install google-auth google-auth-oauthlib djangorestframework 
pipenv install google-auth google-auth-oauthlib djangorestframework requests\

pipenv run python manage.py runserver
cd Desktop/adjeem_python
cat apps/accounts/ssoview.py
ls
sou
source env/bin/activate
pip freeze
cat config/settings/base.py
docker ps -a
docker run --name mongodb -d -p 27017:27017 mongo\

docker ps
cd Desktop/Ma
cd Desktop/MAMU
la
cd server
ls
cd src
cat .env
cd Downloads/kashipara.com_restaurant-e-commerce-webs/Restaurant-E-Commerce-Website-main
cd client
nvim src/App.js
nvim src/components/Feature
nvim src/components/Feature.jsx
grep -r "class=" .
nvim src/components/Logo.js
cat .env
nvim .env
grep -r 'stroke-linecap' .
nvim src/page/MenuStatic.js
ls
nvim src/components/CreateContainer.jsx
cd Desktop/
cd MAMU
cd server
cd src
cat .env
cd
cd Downloads/kashipara.com_restaurant-e-commerce-webs/Restaurant-E-Commerce-Website-main
cd client
npm install
ls
npm run dev
npm run start
cd Do
cd Downloads
cd kashipara.com_restaurant-e-commerce-webs
cat install.txt
cd Restaurant-E-Commerce-Website-main
cd server
npm install
cat package.json
npm start
npm dev
npm run start
cat index.js
ls
nvim .env
cat .env
node index.js
npm run dev
sudo poweroff
cd Downloads/kashipara.com_restaurant-e-commerce-webs/Restaurant-E-Commerce-Website-main
cd server
ls
npm run dev
docker ps
docker ps -a
docker start mongodb
cd Downloads/kashipara.com_restaurant-e-commerce-webs/Restaurant-E-Commerce-Website-main
cd server
lw
cd ..
cd client
nvim .env
ls
cd cli
npm run dev
npm run start
sudo poweroff
docker start postgres-container
cd Desktop/WaterAlert
cat frontend/src/axiosInstance.jsx
cd..
cd ..
cd AECPrimeBackend
cd backend/src
nvim authentication/api/sso.py
git add .
git commit -m "sso working perfectly"
git push -u origin master
cd
cd Desktop/WaterAlert/frontend/src
ls
cat components/createAlertCard.jsx
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
nvim authentication/api/sso.py
python manage.py runserver
cd Desktop/AECPrimeBackend
ls
cd backend
pipenv shell
cd Desktop/AECPrime
cd ..
nvim .env
git commit -m "fixed all issues related to sso and also added their env to env file"
cd src
fg
nvim axiosInstance.tsx
git commit -m "created an axios instance"
git add .
git commit -m "sso working perfectly|\
"
git push -u origin master
nvim components/common/googleLogin.tsx
ls
sudo poweroff
cd Desktop/AECPrime
npm i zustand
npm i axios
npm run dev
docker start postgres-container
cd Desktop/AECPrime
ls
cd src
git status
nvim pages/Landing.tsx
git add .
git commit -m "email login fully done with proper error showing and proper navigation"
fg
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
python manage.py runserver
cd Desktop/AECPrimeBackend
cd backend
cd src
ls
python manage.py runserver
pipenv shell
cd Desktop/AECPrime
ls
npm run dev
cd Desktop/AECPrimeBackend
cd backend/src
git status
cat ../../../WaterAlert/frontend/src/components/createAlertCard.jsx
cat ../../../WaterAlert/frontend/src/components/addCustomer.jsx
cat ../../../WaterAlert/frontend/src/components/userCard.jsx
ls
cat ../../../WaterAlert/frontend/src/components/customerMessageCard.jsx
nvim authentication/urls.py
sudo poweroff
cd Downloads/kashipara.com_restaurant-e-commerce-webs/Restaurant-E-Commerce-Website-main
ls -la
rm -rf .git
git init
git add .
git commit -m "workable state"
git remote add origin git@github.com:SubinBudhathoki58/7-sem-project.git
git push -u origin master
cat server/.gitignore
cd 
ls
docker ps
ssh sandesh@stakville.net
ssh sandesh@starkville.net
cd Desktop/WaterAlert
ls
nvim frontend/src/components/userCard.jsx
nvim frontend/src/axiosInstance.jsx
git diff
sudo poweroff
cd Desktop/adjeem_python
ls
git status
cd Desktop/adjeem_python
sudo poweroff
cd Desktop
ls
cd Downloads/Postman
./Postman
cd Desktop/AECPrimeBackend
ls
cd backend/src
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src/
python manage.py makemigrations
python manage.py migrate
python manage.py runserver
docker start postgres-container
cd Desktop/AECPrime
git add .
git commit -m "ongoing work in register and added change status"
git push -u origin maste
git push -u origin master
cd Desktop/AECPrime
ls
npm run dev
cd Desktop/AECPrime
ls
git commit -m "registration upto usernam done"
fg
git add .
git commit -m "everything upto account registratino login sso working properly"\

git push -u origin master
nvim src/components/registration
cd Desktop/AECPrimeBackend
cd backend/src
lw
ls
git commit -m 'registration fully success\
"\
'
git commit -m "everything upto account registratino login sso working properly"
git push -u origin master
git add .
git commit -m "error formatted for registration"
fg
nvim authentication/api/Email.py
sudo poweroff
cd Desktop/AECPrime
git log
cd Desktop/Django_React_LMS
cd ..
cd adjeem_python
git fetch origin master
git merge origin/master
ls
git branch
git branch -D detail
git checkout -b detail
ssh sandesh@starkville.net
sudo poweroff
cd Desktop/adjeem_python
cd Desktop/adjeem_python
ls
source env/bin/activate
git branch
python manage.py runserver
cd Desktop/adjeem_python
ls
cat apps/store/models.py
nvim apps/store i
git commit -m "feedback issue solved"
git push -u origin detail
nvim templates/home/service-details.html
git commit -m "date issue in index page"
fg
nvim apps/store/views.py
git add .
git commit -m 'pagination issue at listing page done"\
'
sudo poweroff
cd Desktop/adjeem_python
source env/bin/activate
python manage.py runserver
cd Desktop
cd Downloads
cd templates
cd home
cd others
git clone git@github.com:bishal189/Dubai-templates.git
cd adjeem_python
cd ..
cd Dubai-templates
cd html
ls
firefox service-details.html
cd Desktop/adjeem_python
ls
nvim templates/home/service-details.html
git commit -m 'listing pages linked and view count and other things changed"\
'
git add .
git commit -m "further changes in listing page"
fg
git push -u origin detail
sudo poweroff
cd Desktop/adjeem_python
cd mediumFrontend
c d..
cd ..
cd MSSERP
ls
source env/bin/activate
python manage.py makemigrations
python manage.py migrate
python manage.py runserver
cd Desktop/mediumFrontend
cd ..
cd MSSERP
ls
source env/bin/activate
python manage.py migrate
nvim company/middleware.py
git add .
git commit -m "altunit model added and additional work going on"
git push -u origin detail
git branch
git checkout -b work
git push -u origin work
sudo poweroff
cd Desktop/adjeem_python
git status
git diff
git add .
git commit -m "changed some time values"
git branch
git push -u origin  detail
cd .
cd ..
ls
cd Desktop/adjeem_python
ls
source env/bin/activate
git switch main
git switch master
git pull origin master
python manage.py makemigrations
python manage.py migrate
python manage.py runserver
sudo poweroff
cd Desktop/AECPrimeBackend
cd backend
ls
cd src
nvim authentication/api/Email.py
git commit -m "issue is mainly how email change is handled anyway solved"
git commit -m "working properly for emailchange"
git push -u origin  detail
git add .
git commit -m "previous codes removed properly in change email"
git push -u origin  master
fg
cd Desktop/AECPrime
ls
cd src
git commit -m "email change use different email functinoality added"
git commit -m "more validations added for change email parts"
git push -u origin  master
nvim components/registration/UserNameRegister.tsx
git add .
git commit -m "perfect validation against previously created tokens"
g
fg
cd Desktop/AECPrimeBackend
cd backend
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
python manage.py runserver
cd Desktop/AECPrime
npm run dev
sudo poweroff
docker start postgres-container
cd Desktop/AECPrimeBackend
cd backend/src
ls
nvim authentication/urls.py
git add .
git commit -m "properly stored token for usertype use"
cd Desktop/AECPrime
cd src
nvim components/registration/ProfileRegistration.tsx
ls
mkdir store
touch store/registration.ts
git commit -m "mostly done for profile registration now just image left\
"
git commit -m "file also shown now just have to change the data type of form submission from json to form type"
git add .
git commit -m "image change success now just for submission part"
fg
cd Desktop/AECPrimeBackend
ls
cd backend/
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
python manage.py runserver
cd Desktop/AECPrime
npm run dev
sudo poweroff
cd Desktop/MSSERP
ls
nvim company/views.py
git commit -m "altunit properly add and removed"
fg
git add .
git commit -m "altunit show hide done in isetup and invoice"
ls
cd Desktop/adjeem_python
cd ..
cd MSSERP
deactivate
source env/bin/activate
python manage.py runserver
sudo poweroff
cd Desktop/AECPrime
cd ..
cd AECPrimeBackend
git push -u origin master
cd Desktop/MSSERP
source env/bin/activate
python manage.py runserver
cd Desktop/MSSERP
ls
nvim salesapp/views.py
git commit -m "godown shown and item balanced removd properly"
f
fg
git add .
git commit -m "unit value changes on alt unit change"
git push -u origin detail
git branch
git push -u origin work
sudo poweroff
cd Desktop/AECPrimeBackend
docker start postgres-container
cd backend/src
ls
nvim authentication/api/BuyerProfile.py
git commit -m "little model changed and serializer changes"
fg
git diff
git add .
git commit -m "profile also sent in sso views"
git push -u origin master
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
python manage.py makemigrations
python manage.py migrate
python manage.py runserver
cd Desktop/AECPrime
ls
cd src
nvim components/registration/UserTypeRegistration.tsx
git commit -m "profile registration also done"
git commit -m "proper validation and usertype registration"
git commit -m "localstorage token add on login and remove username and password on email confirm"
git commit -m "on login if profile exists for either buyer or seller then respecitive redirection"
git commit -m "proper redirection in every form of login tested"
git push -u origin master
nvim pages/Landing.tsx
git status
git add .
git commit -m "changed status"
fg
git diff
sudo poweroff
cd Desktop/AECPrimeBackend
ls
cd backend
pipenv shell
cd Desktop/AECPrime
npm run dev
cd Desktop/Django_React_LMS
cd ..
cd adjeem_python
ls
source env/bin/activate
git add .
git commit -m "sorting with query aprameters also done for subcategory"
python manage.py runserver
cd Desktop/adjeem_python
ls
source env/bin/activate
cp templates/listing/listing-sidebar.html templates/listing/listing-subcategory.html
mv templates/listing/listing-sidebar.html templates/listing/listing-category.html
git commit -m "sorting fixed "
rm templates/partials/pagination.html
cp templates/partials/filter_paginations.html templates/partials/filter_subcategory_pagination.html
git diff 
git restore a/templates/partials/pagination.html
git restore templates/partials/pagination.html
git add .
git commit -m "filtering success in subcategory section"
git branch
fg
nvim apps/category/views.py
sudo poweroff
cd Desktop/adjeem_python
ls
nvim apps/category/views.py
git commit -m "filtering and pagination in category as well"
fg
git add .
git commit -m "added more validation while sorting and formatted listing category and subcategory"
cd Desktop/adjeem_python
source env/bin/activate
python manage.py runserver
sudo poweroff
ssh sandesh@starkville.net
ssh 
cat .zsh/.zsh_history
cd Desktop/MSSERP
source env/bin/activate
python manage.py makemigrations
python manage.py migrate
python manage.py runserver
cd Desktop/adjeem_python
git fetch origin master
git merge origin/master
git push -u origin master
cd ..
cd MSSERP
ls
nvim Templates/Employee/createemployee.html
sudo poweroff
cd Desktop/MSSERP
ls
git status
git add .
git commit -m 'changed little modal"\
'
git push -u origin detail
git branch
git push -u origin wrk
git push -u origin work
git switch main
git pull origin main
source env/bin/activate
python manage.py runserver
docker start postgres-container
cd Desktop/AECPrime
ls
npm run dev
cd Desktop/AECPrime
cd src
nvim components/registration/EmailConfirm.tsx
sudo poweroff
cd Desktop/AECPrimeBackend
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src/
python manage.py runserver
cd Desktop/AECPrimeBackend
cd backend
pipenv shell
sudo poweroff
cd Desktop/AECPrime
git status
git diff
git log
nvim src/components/registration/UserNameRegister.tsx
nvim src/pages/Landing.tsx
touch src/store/userProfile.ts
python manage.py runserver
source env/bin/activate
npm run dev
fg
git add .
git commit -m "confirm email modal separated"
sudo poweroff
ssh sandesh@hub.starkville.net
cd Desktop/WaterAlert
ls
rsync -arv --exclude="node_modues" ./frontend sandesh@hub.starkville.net
rsync -arv --exclude="node_modues" ./frontend sandesh@hub.starkville.net:WaterAlert
rsync -arv --exclude="node_modules" ./frontend sandesh@hub.starkville.net:WaterAlert
cd Desktop/MSSERP
ls
nvim salesapp/views.py
git add .
git commit -m "mrname done"
git push -u origin master
git push -u origin main
git fetch origin master
git branch
git fetch origin main
git merge origin/main
cd Desktop/MSSERP
ls
source env/bin/activate
python manage.py runserver
sudo poweroff
cd Desktop/adjeem_python
source env/bin/activate
python manage.py runserver
cd Desktop/adjeem_python
ls
source env/bin/activate
nvim apps/home/views.py
touch templates/partials/product_list_mylist.html
git commit -m "pagination and sorting perfect in our my listing page"
git add .
git commit -m "search also implemented in my listing page"
git push -u origin main
git branch
git checkout -b pagination
git push -u origin pagination
fg
git diff
sudo poweroff
cd Desktop/adjeem_python
ls
nvim apps/home/views.py
cp templates/partials/pagination.html templates/partials/pagination_mylist.html
git commit -m "everything in mylisting connected"
touch templates/partials/product_list_bookmark.html
fg
git add .
git commit -m "bookmarks pagination done"
git push -u origin pagination 
cd Desktop/adjeem_python
ls
source env/bin/activate
python manage.py runserver
cd Desktop/AECPrime
cd src
ls
cat store/userProfile.ts
nvim store/userProfile.ts
git commit -m "created zustand store for stronig user and profile during login"
git commit -m "used localforage package for persistnet storage"
cd ..
git commit -m "newly added packages"
df
git commit -m "storing zustand data in app.jsx"
git commit -m 'proper redirection based on path"\
'
fg
git add .
git commit -m "redirection only on index page"
git status
cd Desktop/AECPrimeBackend
cd backend/src
ls
nvim authentication/u
nvim authentication/urls.py
cd Desktop/AECPrime
cd ..
cd AECPrimeBackend
ls
cd backend
docker start postgres-container
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
python manage.py runserver
cd Desktop/AECPrime
npm install zustand zustand/middleware
ls
sudo npm install zustand/middleware
npm install immer
npm install npm@latest -g
sudo npm install npm@latest -g
npm install zustand/middleware
sudo npm install zustand-middleware
npm install zustand-persist\

import create from 'zustand';\
import localforage from 'localforage';\
\
// Configure localforage\
localforage.config({\
  driver: localforage.LOCALSTORAGE, // Use localStorage\
  name: 'my-app-store', // Your app's name\
  storeName: 'user-store', // Unique name for the store\
});\
\
// Define a custom hook for the store\
const useUserStore = create((set) => ({\
  user: null,\
  profile: null,\
  setUser: async (user) => {\
    const newState = { user };\
    await localforage.setItem('user-storage', newState);\
    set(newState);\
  },\
  setProfile: async (profile) => {\
    const newState = { profile };\
    await localforage.setItem('user-storage', newState);\
    set(newState);\
  },\
  clearUser: async () => {\
    const newState = { user: null };\
    await localforage.setItem('user-storage', newState);\
    set(newState);\
  },\
  clearProfile: async () => {\
    const newState = { profile: null };\
    await localforage.setItem('user-storage', newState);\
    set(newState);\
  },\
  clearAll: async () => {\
    await localforage.removeItem('user-storage');\
    set({ user: null, profile: null });\
  },\
  load: async () => {\
    const storedState = await localforage.getItem('user-storage');\
    if (storedState) {\
      set(storedState);\
    }\
  },\
}));\
\
// Load initial state\
useUserStore.getState().load();\
\
export default useUserStore;\

npm install localforage\

sudo npm install -v localforage
sudo npm install --v localforage
sudo npm install localforage
npm run dev
sudo poweroff
sudo poweroff
cd Desktop/AECPrime
cd src
ls
nvim components/Profile/Profile.tsx
git add .
git commit -m 'used different storage areas for profile and user'
git status
cd Desktop/AECPrimeBackend
ls
cd backend
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
docker start postgres-container
python manage.py runserver
cd Desktop/AECPrime
npm run dev
sudo poweroff
cd Desktop/adjeem_python
ls
source env/bin/activate
python manage.py runserver
cd Desktop/adjeem_python/
ls
touch templates/partials/product_list_search.html
nvim templates/others/search.html
cp templates/partials/pagination.html templates/partials/pagination_search.html
fg
git add .
git commit -m "proper pagination added in search page"
sudo poweroff
cd Desktop/AECPrimeBackend
cd backend
cd src
ls
nvim authentication/models.py
cd Desktop/AECPrimeBackend
cd backend
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
docker start postgres-container
python manage.py runserver
cd Desktop/AECPrime
npm run dev
cd Desktop/AECPrimeBackend
cat backend/src/authentication/models.py
cd backend/s
cd backend/src
ls
nvim authentication/api/Email.py
cd Desktop/AECPrime
cd AECPrimeBackend
git satus
git commit -m 'little dependency update'
cd ..
cd AECPrime
git status
git push -u master
git push -u main
cd src
ls
nvim components/Profile/Profile.tsx
git commit -m "all data added in profile page second trial with zustand data directly"
touch components/Profile/EmailChangeModal.tsx
git commit -m "verification and email change model done"
fg
git add .
git commit -m "proper inactive and email change handled in our profile page"
git push -u origin master
sudo poweroff
cd Desktop/AECPrime
npm run dev
cd Desktop/AECPrime
ls
cd src
nvim components/Profile/Profile.tsx
touch components/Profile/VerificationModal.tsx
touch components/Profile/profileUtils.ts
git commit -m "made it more modular by refactoring every component into its own file"
git add .
git commit -m "formatted image profile sections"
git push -u origin master
git log
fg
sudo poweroff
cd Desktop/AECPrimeBackend/backend/src
ls
nvim authentication/api/Email.py
cd Desktop/AECPrime
npm run dev
cd Desktop/AECPrime
cd src
ls
cp components/Profile/EmailChangeModal.tsx components/Profile/ResetPasswordModal.tsx
nvim components/Profile/ResetPasswordModal.tsx
git add .
git commit -m "ongoing on reset password almost finished"
git status
git push -u origin master
fg
nvim components/Profile/Profile.tsx
sudo poweroff
cd Desktop/AECPrime
ls
cd src
git status
git diff
git commit -m "little issue on change password done"
nvim components/Profile/profileUtils.ts
nvim components/Profile/Profile.tsx
git commit -m "created states for storing profile and company info"
fg
git add .
git commit -m 'image finally changed'
git push -u origin master
sudo poweroff
cd Desktop/AECPrime
npm run dev
sudo poweroff
cd Desktop/AECPrimeBackend
cd backend
ls
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
docker start postgres-container
docker ps
python manage.py runserver
cd Desktop/AECPrime
npm run dev
cd Desktop/AECPrime
cd src
nvim components/Profile/Profile.tsx
git add 
git commit -m "properly added spinner for verifying unverified emails ro for handling our reset password"
git commit -m "profile update also utils written"
fg
git add .
git commit -m "reset password completely checked and validated"
git push -u origin master
sudo poweroff
cd Desktop/AECPrimeBackend
git status
git diff
git add .
git commit -m "confrim password validation done in frontend and removed in backend"
git push -u origin master
cd Desktop/AECPrime
cd src
ls
nvim components/Profile/VerificationModal.tsx
git commit -m "profile update perfect"
fg
git diff
git add .
git commit -m 'company details also updated'
git status
cd Desktop/AECPrimeBackend
s
cd backend
ls
cat src/authentication/urls.py
nvim src/authentication/api/BuyerProfile.py
cd Desktop/AECPrimeBackend
cd ..
cd AECPrime
ls
npm run dev
cd Desktop/AECPrimeBackend
cd backend
ls
pipenv shell
 . /home/sandesh/.local/share/virtualenvs/backend-UiV6FEFT/bin/activate
cd src
docker start postgres-container
python manage.py runserver
sudo poweroff
redshift
redshift -O 4500\

cd .c
cd .config
cd nvim
cat init.lua
cd xfce4/terminal
nvim terminalrc
cd /etc/xfce4
cat i3status.conf 
cd
ls .zshrc
ls .zsh
cd .zsh
ls -la
cd ..
ls
cat .profile
cat .zshrc
cd .config
cd i3
ls
nvim config
sudo poweroff
